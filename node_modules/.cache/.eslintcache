[{"/Users/uwu/Documents/Dev/weather-app/src/index.tsx":"1","/Users/uwu/Documents/Dev/weather-app/src/serviceWorker.ts":"2","/Users/uwu/Documents/Dev/weather-app/src/app/store.ts":"3","/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterSlice.ts":"4","/Users/uwu/Documents/Dev/weather-app/src/features/counter/Counter.tsx":"5","/Users/uwu/Documents/Dev/weather-app/src/app/hooks.ts":"6","/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterAPI.ts":"7","/Users/uwu/Documents/Dev/weather-app/src/configurestore.js":"8","/Users/uwu/Documents/Dev/weather-app/src/ducks/index.js":"9","/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js":"10","/Users/uwu/Documents/Dev/weather-app/src/ducks/game_state.js":"11","/Users/uwu/Documents/Dev/weather-app/src/game-data/card-data.js":"12","/Users/uwu/Documents/Dev/weather-app/src/game-data/affliction-card-data.js":"13","/Users/uwu/Documents/Dev/weather-app/src/game-data/monster-data.js":"14","/Users/uwu/Documents/Dev/weather-app/src/game-data/tracks.js":"15","/Users/uwu/Documents/Dev/weather-app/src/game-data/game-state.js":"16","/Users/uwu/Documents/Dev/weather-app/src/game-data/heros-data.js":"17","/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/index.js":"18","/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx":"19","/Users/uwu/Documents/Dev/weather-app/src/App.tsx":"20","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/index.js":"21","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/weatherToday.jsx":"22","/Users/uwu/Documents/Dev/weather-app/src/config.js":"23","/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/mainStyle.js":"24"},{"size":672,"mtime":1645851672599,"results":"25","hashOfConfig":"26"},{"size":5290,"mtime":1645682003815,"results":"27","hashOfConfig":"28"},{"size":447,"mtime":1645682003811,"results":"29","hashOfConfig":"28"},{"size":2989,"mtime":1645682003814,"results":"30","hashOfConfig":"28"},{"size":1776,"mtime":1645682003812,"results":"31","hashOfConfig":"28"},{"size":350,"mtime":1645682003811,"results":"32","hashOfConfig":"28"},{"size":214,"mtime":1645682003813,"results":"33","hashOfConfig":"28"},{"size":555,"mtime":1647825059817,"results":"34","hashOfConfig":"26"},{"size":119,"mtime":1647486752182,"results":"35","hashOfConfig":"26"},{"size":537,"mtime":1647487326014,"results":"36","hashOfConfig":"26"},{"size":1287,"mtime":1645853165692,"results":"37","hashOfConfig":"26"},{"size":3390,"mtime":1645851201473,"results":"38","hashOfConfig":"28"},{"size":1041,"mtime":1645851201472,"results":"39","hashOfConfig":"28"},{"size":5363,"mtime":1645851201475,"results":"40","hashOfConfig":"28"},{"size":2618,"mtime":1645851201477,"results":"41","hashOfConfig":"28"},{"size":105,"mtime":1645851201473,"results":"42","hashOfConfig":"28"},{"size":765,"mtime":1645851201474,"results":"43","hashOfConfig":"28"},{"size":38,"mtime":1645852781366,"results":"44","hashOfConfig":"26"},{"size":10679,"mtime":1648359261481,"results":"45","hashOfConfig":"26"},{"size":459,"mtime":1648008256780,"results":"46","hashOfConfig":"26"},{"size":46,"mtime":1647487115705,"results":"47","hashOfConfig":"26"},{"size":472,"mtime":1647489080762,"results":"48","hashOfConfig":"26"},{"size":101,"mtime":1647819403246,"results":"49","hashOfConfig":"26"},{"size":1064,"mtime":1648094743592,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"c63hce",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15z1oec",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/uwu/Documents/Dev/weather-app/src/index.tsx",[],[],["126","127"],"/Users/uwu/Documents/Dev/weather-app/src/serviceWorker.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/app/store.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterSlice.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/Counter.tsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/app/hooks.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterAPI.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/configurestore.js",[],[],["128","129"],"/Users/uwu/Documents/Dev/weather-app/src/ducks/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/ducks/game_state.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/card-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/affliction-card-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/monster-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/tracks.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/game-state.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/heros-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],[],"// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { WeekContainer, DayStyle, DayTitle, DayNumber, MainDayStyle, WeatherIcon} from \"./mainStyle\";\n\nconst { WEATHER_API_KEY } = require('../../../config');\n\nconst MainScreen = () => {\n    const dispatch = useDispatch()\n\n    const [latitude, setLatitude] = useState(\"\")\n    const [longitude, setLongitude] = useState(\"\")\n\n    \n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [weekDays, setWeekdays] = useState([])\n    const [weekDaysWeather, setWeekDaysWeather] = useState([])\n\n    const [weather, setWeather] = useState('')\n    const [location, setLocation] = useState('')\n    const [country, setCountry] = useState('')\n    const [feels, setFeelsLike] = useState('')\n    const [humidity, setHumidity] = useState('')\n\n    // Ridgecrest lat: 35.624947; long: -117.679637;\n    // const latitude =  Math.ceil(Math.random() * 90) * (Math.round(Math.random()) ? 1 : -1)\n    // const longitude =  Math.ceil(Math.random() * 180) * (Math.round(Math.random()) ? 1 : -1)\n\n    // const apiCall = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=' + WEATHER_API_KEY + '&units=imperial'\n    // const displayScreen = () => {\n    //     dispatch(updateScreen('WeatherToday'))\n    // }\n\n    const getDay = (delta) => {\n        let date = new Date()\n        const previous = new Date(date.getTime());\n        previous.setDate(date.getDate() + delta);\n        return previous;\n    }\n\n    const getWeatherForWeek = async (lat, long) => {\n        const apiHistCall = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n            lat + \"&lon=\" + long +\n            \"&appid=\" + WEATHER_API_KEY +\n            \"&units=imperial\";\n        const response = await fetch(apiHistCall); // Generate the Response object\n        if (response.ok) {\n            const jsonValue = await response.json(); // Get JSON value from the response body\n            return Promise.resolve(jsonValue);\n        } else {\n            return Promise.reject('404');\n        }\n    }\n\n    const getWeatherForYesterday = async (lat, long) => {\n        let date = getDay(-1);\n        let utc = Math.floor(date.getTime() / 1000);\n        console.log(utc)\n        // https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&appid={API key}\n        const apiHistCall = \"https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=\" +\n            lat + \"&lon=\" + long +\n            \"&dt=\" + utc +\n            \"&appid=\" + WEATHER_API_KEY +\n            \"&units=imperial\";\n        const response = await fetch(apiHistCall); // Generate the Response object\n        if (response.ok) {\n            const jsonValue = await response.json(); // Get JSON value from the response body\n            return Promise.resolve(jsonValue);\n        } else {\n            return Promise.reject('404');\n        }\n    }\n\n    // const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const weekdays = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    const weatherIcons = {\n        'Rain' : '🌧',\n        \"Drizzle\" : '🌧',\n        'Cloudy' : '☁️',\n        'Clear' : '☀️',\n        'Cloudy' : '🌤',\n        'Thunderstorm' : '⛈',\n        'Overcast' : '🌨'\n    }\n\n    const idToWeather = (id) => {\n        switch (id[0]) {\n            case \"2\":       \n                return \"Thunderstorm\";\n            case \"3\":\n                return \"Drizzle\";\n            case \"5\":\n                return \"Rain\";\n            case \"6\":\n                return \"Snow\";\n            case \"7\":\n                // 701:\"Mist\", 711:\"Smoke\", 721:\"Haze\", 731:\"Dust\", 741:\"Fog\",\n                // 751:\"Sand\", 761:\"Dust\", 762:\"Ash\", 771:\"Squall\", 781:\"Tornado\"\n                return \"Atmosphere\";\n            case \"8\":\n                return id[2] == \"0\" ? \"Clear\" : (id[2] == \"1\" ? \"Cloudy\" : \"Overcast\")\n            default:\n                return \"Unknown\"\n        }\n    }\n\n    // const date = new Date();\n    // let month = months[date.getMonth()];\n    // let month_number = date.getMonth();\n    // let prevWeekday = weekdays[date.getDay() - 1 == -1 ? 6 : date.getDay() - 1]\n    // let weekday = weekdays[date.getDay()];\n\n    useEffect(() => {\n        // setLatitude(\"35.62\");\n        // setLongitude(\"-117.67\");\n        getWeatherForYesterday(\"35.622540\", \"-117.676430\")\n            .then(\n                (yesterday) => {\n                    console.log(\"yesterday\", yesterday)\n                    console.log(yesterday[\"current\"][\"weather\"][0][\"main\"])\n\n                    getWeatherForWeek(\"35.622540\", \"-117.676430\")\n                        .then(\n                            (week) => {\n                                // console.log('weel:', week);\n                                setWeekDaysWeather([yesterday[\"current\"], week[\"daily\"][0], week[\"daily\"][1], week[\"daily\"][2], week[\"daily\"][3], week[\"daily\"][4], week[\"daily\"][5]])\n                                // let weekWeather = week[\"daily\"];\n                                // console.log(\"today:\",weekWeather[0][\"weather\"][0][\"main\"])\n                                // console.log(\"tommorow:\",weekWeather[1][\"weather\"][0][\"main\"])\n                                // console.log(\"day after tommorow:\",weekWeather[2][\"weather\"][0][\"main\"])\n                                // console.log(\"week\", weekWeather)\n                                // console.log(week[\"current\"][\"weather\"][0][\"main\"])\n                                setIsLoaded(true);\n                            }\n                        ).catch(\n                            (error) => {\n                                console.log(error);\n                                // setIsLoaded(true);\n                                // setError(error);\n                            }\n                        )\n                }\n            ).catch(\n                (error) => {\n                    console.log(error);\n                }\n            )\n\n        setWeekdays([getDay(-1), getDay(0), getDay(1), getDay(2), getDay(3), getDay(4), getDay(5)])\n\n        \n        // doAjax()\n        //     .then(\n        //         (result) => {\n        //             // console.log(result);\n        //             // setLocation(result['name'] ? result['name'] : 'Unknown');\n        //             // setCountry(result['sys']['country'] ? result['sys']['country'] : 'Unknown');\n        //             // setWeather(result['weather'][0]['main']);\n        //             // setFeelsLike(result['main']['feels_like']);\n        //             // setHumidity(result['main']['humidity']);\n        //             // setIsLoaded(true);\n        //         }\n        //     )\n        //     .catch(\n        //         (error) => {\n        //             console.log(error);\n        //             setIsLoaded(true);\n        //             setError(error);\n        //         }\n\n        \n        //     );\n\n    }, [])\n\n    console.log(weekDaysWeather)\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div>\n\n                {/* attribute icon */}\n                {/* <a href=\"https://www.flaticon.com/free-icons/weather\" title=\"weather icons\">Weather icons created by Freepik - Flaticon</a> */}\n                \n                {/* <div style={{fontWeight:\"bold\"}}>[ ☀️ 🌤 ☁️ 🌧 ⛈ 🌨 🌦 🌪 🌡 ]</div>\n                <div>[ Refresh to change location ]</div>\n                <div>Latitude: {latitude} Longitude: {longitude}</div>\n                <div>Country: {country}</div>\n                <div>Location: {location}</div>\n                <div>Weather: {weather}</div>\n                <div>Feels like {feels}</div>\n                <div>Humidity {humidity}</div> */}\n\n                <WeekContainer>\n                    {weekDays.map((day, index) => \n                        {\n                            if (day == weekDays[1]){\n                                return (\n                                <MainDayStyle>\n                                    <DayTitle>\n                                        {weekdays[day.getDay()]}\n                                    </DayTitle>\n                                    <DayNumber>\n                                        {day.getDate()}\n                                    </DayNumber>\n                                    {weekDaysWeather[index][\"weather\"][0][\"main\"]}\n                                    <WeatherIcon>\n                                        {/* {console.log(\"UTC:\" + timeToUTC(getDay(0)))} */}\n                                        {/* {weatherIcons[\"Clear\"]} */}\n                                    </WeatherIcon>\n                                </MainDayStyle>\n                                )\n                            } else {\n                                return (\n                                <DayStyle>\n                                    <DayTitle>\n                                        {weekdays[day.getDay()]}\n                                    </DayTitle>\n                                    <DayNumber>\n                                        {day.getDate()}\n                                    </DayNumber>\n                                    {weekDaysWeather[index][\"weather\"][0][\"main\"]}\n                                    <WeatherIcon>\n                                        {/* {weatherIcons[\"Clear\"]} */}\n                                    </WeatherIcon>\n                                </DayStyle>\n                                )\n                            }\n                        }\n                    )}\n                </WeekContainer>\n\n                {/* <div id=\"weekContainer\" style={weekContainer}>\n                    \n                    <div id=\"prevDay\" style={dayStyle}>\n                        <div>\n                            {prevWeekday}\n                        </div>\n                        <div>\n                            {prevDay}\n                        </div>\n                    </div>\n\n                    <div id=\"today\" style={dayStyle}>\n                        <div>\n                            {weekday}\n                        </div>\n                        <div>\n                            {day}\n                        </div>\n                    </div>\n\n                </div> */}\n\n            </div>\n        );\n    }\n}\n\nexport default MainScreen","/Users/uwu/Documents/Dev/weather-app/src/App.tsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/weatherToday.jsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/config.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/mainStyle.js",[],[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":22},{"ruleId":"158","severity":1,"message":"162","line":10,"column":11,"nodeType":"160","messageId":"161","endLine":10,"endColumn":19},{"ruleId":"158","severity":1,"message":"163","line":12,"column":12,"nodeType":"160","messageId":"161","endLine":12,"endColumn":20},{"ruleId":"158","severity":1,"message":"164","line":12,"column":22,"nodeType":"160","messageId":"161","endLine":12,"endColumn":33},{"ruleId":"158","severity":1,"message":"165","line":13,"column":12,"nodeType":"160","messageId":"161","endLine":13,"endColumn":21},{"ruleId":"158","severity":1,"message":"166","line":13,"column":23,"nodeType":"160","messageId":"161","endLine":13,"endColumn":35},{"ruleId":"158","severity":1,"message":"167","line":16,"column":19,"nodeType":"160","messageId":"161","endLine":16,"endColumn":27},{"ruleId":"158","severity":1,"message":"168","line":21,"column":12,"nodeType":"160","messageId":"161","endLine":21,"endColumn":19},{"ruleId":"158","severity":1,"message":"169","line":21,"column":21,"nodeType":"160","messageId":"161","endLine":21,"endColumn":31},{"ruleId":"158","severity":1,"message":"170","line":22,"column":12,"nodeType":"160","messageId":"161","endLine":22,"endColumn":20},{"ruleId":"158","severity":1,"message":"171","line":22,"column":22,"nodeType":"160","messageId":"161","endLine":22,"endColumn":33},{"ruleId":"158","severity":1,"message":"172","line":23,"column":12,"nodeType":"160","messageId":"161","endLine":23,"endColumn":19},{"ruleId":"158","severity":1,"message":"173","line":23,"column":21,"nodeType":"160","messageId":"161","endLine":23,"endColumn":31},{"ruleId":"158","severity":1,"message":"174","line":24,"column":12,"nodeType":"160","messageId":"161","endLine":24,"endColumn":17},{"ruleId":"158","severity":1,"message":"175","line":24,"column":19,"nodeType":"160","messageId":"161","endLine":24,"endColumn":31},{"ruleId":"158","severity":1,"message":"176","line":25,"column":12,"nodeType":"160","messageId":"161","endLine":25,"endColumn":20},{"ruleId":"158","severity":1,"message":"177","line":25,"column":22,"nodeType":"160","messageId":"161","endLine":25,"endColumn":33},{"ruleId":"158","severity":1,"message":"178","line":78,"column":11,"nodeType":"160","messageId":"161","endLine":78,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":83,"column":9,"nodeType":"181","messageId":"182","endLine":83,"endColumn":17},{"ruleId":"158","severity":1,"message":"183","line":88,"column":11,"nodeType":"160","messageId":"161","endLine":88,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":103,"column":30,"nodeType":"186","messageId":"182","endLine":103,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":103,"column":56,"nodeType":"186","messageId":"182","endLine":103,"endColumn":58},{"ruleId":"187","severity":1,"message":"188","line":176,"column":8,"nodeType":"189","endLine":176,"endColumn":10,"suggestions":"190"},{"ruleId":"184","severity":1,"message":"185","line":203,"column":37,"nodeType":"186","messageId":"182","endLine":203,"endColumn":39},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'updateScreen' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'latitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'setLongitude' is assigned a value but never used.","'setError' is assigned a value but never used.","'weather' is assigned a value but never used.","'setWeather' is assigned a value but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'country' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'feels' is assigned a value but never used.","'setFeelsLike' is assigned a value but never used.","'humidity' is assigned a value but never used.","'setHumidity' is assigned a value but never used.","'weatherIcons' is assigned a value but never used.","no-dupe-keys","Duplicate key 'Cloudy'.","ObjectExpression","unexpected","'idToWeather' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherForYesterday'. Either include it or remove the dependency array.","ArrayExpression",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},"Update the dependencies array to be: [getWeatherForYesterday]",{"range":"196","text":"197"},[7141,7143],"[getWeatherForYesterday]"]