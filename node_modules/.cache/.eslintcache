[{"/Users/uwu/Documents/Dev/weather-app/src/index.tsx":"1","/Users/uwu/Documents/Dev/weather-app/src/serviceWorker.ts":"2","/Users/uwu/Documents/Dev/weather-app/src/app/store.ts":"3","/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterSlice.ts":"4","/Users/uwu/Documents/Dev/weather-app/src/features/counter/Counter.tsx":"5","/Users/uwu/Documents/Dev/weather-app/src/app/hooks.ts":"6","/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterAPI.ts":"7","/Users/uwu/Documents/Dev/weather-app/src/configurestore.js":"8","/Users/uwu/Documents/Dev/weather-app/src/ducks/index.js":"9","/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js":"10","/Users/uwu/Documents/Dev/weather-app/src/ducks/game_state.js":"11","/Users/uwu/Documents/Dev/weather-app/src/game-data/card-data.js":"12","/Users/uwu/Documents/Dev/weather-app/src/game-data/affliction-card-data.js":"13","/Users/uwu/Documents/Dev/weather-app/src/game-data/monster-data.js":"14","/Users/uwu/Documents/Dev/weather-app/src/game-data/tracks.js":"15","/Users/uwu/Documents/Dev/weather-app/src/game-data/game-state.js":"16","/Users/uwu/Documents/Dev/weather-app/src/game-data/heros-data.js":"17","/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/index.js":"18","/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx":"19","/Users/uwu/Documents/Dev/weather-app/src/App.tsx":"20","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/index.js":"21","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/weatherToday.jsx":"22","/Users/uwu/Documents/Dev/weather-app/src/config.js":"23","/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/mainStyle.js":"24","/Users/uwu/Documents/Dev/weather-app/src/images/index.js":"25"},{"size":672,"mtime":1645851672599,"results":"26","hashOfConfig":"27"},{"size":5290,"mtime":1645682003815,"results":"28","hashOfConfig":"29"},{"size":447,"mtime":1645682003811,"results":"30","hashOfConfig":"29"},{"size":2989,"mtime":1645682003814,"results":"31","hashOfConfig":"29"},{"size":1776,"mtime":1645682003812,"results":"32","hashOfConfig":"29"},{"size":350,"mtime":1645682003811,"results":"33","hashOfConfig":"29"},{"size":214,"mtime":1645682003813,"results":"34","hashOfConfig":"29"},{"size":555,"mtime":1647825059817,"results":"35","hashOfConfig":"27"},{"size":119,"mtime":1647486752182,"results":"36","hashOfConfig":"27"},{"size":537,"mtime":1647487326014,"results":"37","hashOfConfig":"27"},{"size":1287,"mtime":1645853165692,"results":"38","hashOfConfig":"27"},{"size":3390,"mtime":1645851201473,"results":"39","hashOfConfig":"29"},{"size":1041,"mtime":1645851201472,"results":"40","hashOfConfig":"29"},{"size":5363,"mtime":1645851201475,"results":"41","hashOfConfig":"29"},{"size":2618,"mtime":1645851201477,"results":"42","hashOfConfig":"29"},{"size":105,"mtime":1645851201473,"results":"43","hashOfConfig":"29"},{"size":765,"mtime":1645851201474,"results":"44","hashOfConfig":"29"},{"size":38,"mtime":1645852781366,"results":"45","hashOfConfig":"27"},{"size":7286,"mtime":1648527848097,"results":"46","hashOfConfig":"27"},{"size":370,"mtime":1648433651811,"results":"47","hashOfConfig":"27"},{"size":46,"mtime":1647487115705,"results":"48","hashOfConfig":"27"},{"size":472,"mtime":1647489080762,"results":"49","hashOfConfig":"27"},{"size":101,"mtime":1647819403246,"results":"50","hashOfConfig":"27"},{"size":1695,"mtime":1648528038374,"results":"51","hashOfConfig":"27"},{"size":102,"mtime":1648427886085,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"c63hce",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15z1oec",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/uwu/Documents/Dev/weather-app/src/index.tsx",[],[],["133","134"],"/Users/uwu/Documents/Dev/weather-app/src/serviceWorker.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/app/store.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterSlice.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/Counter.tsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/app/hooks.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterAPI.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/configurestore.js",[],[],["135","136"],"/Users/uwu/Documents/Dev/weather-app/src/ducks/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/ducks/game_state.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/card-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/affliction-card-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/monster-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/tracks.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/game-state.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/heros-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx",["137","138","139","140","141","142","143"],[],"// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { WeekContainer, MainDayCard, DayCard, DayTitle, DayNumber, WeatherIcon, Month, Year} from \"./mainStyle\";\n\nimport {cloudyMain, cloudy} from '../../../images';\n\nconst { WEATHER_API_KEY } = require('../../../config');\n\nconst MainScreen = () => {\n    const dispatch = useDispatch()\n\n    const [latitude, setLatitude] = useState(\"\")\n    const [longitude, setLongitude] = useState(\"\")\n\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [weekDays, setWeekdays] = useState([])\n    const [weekDaysWeather, setWeekDaysWeather] = useState([])\n\n    const weekdays = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n\n    const getDay = (delta) => {\n        let date = new Date()\n        const previous = new Date(date.getTime());\n        previous.setDate(date.getDate() + delta);\n        return previous;\n    }\n\n    // const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    // const weatherIcons = {\n    //     'Rain' : '🌧',\n    //     \"Drizzle\" : '🌧',\n    //     'Cloudy' : '☁️',\n    //     'Clear' : '☀️',\n    //     'Cloudy' : '🌤',\n    //     'Thunderstorm' : '⛈',\n    //     'Overcast' : '🌨'\n    // }\n\n    // const idToWeather = (id) => {\n    //     switch (id[0]) {\n    //         case \"2\":       \n    //             return \"Thunderstorm\";\n    //         case \"3\":\n    //             return \"Drizzle\";\n    //         case \"5\":\n    //             return \"Rain\";\n    //         case \"6\":\n    //             return \"Snow\";\n    //         case \"7\":\n    //             // 701:\"Mist\", 711:\"Smoke\", 721:\"Haze\", 731:\"Dust\", 741:\"Fog\",\n    //             // 751:\"Sand\", 761:\"Dust\", 762:\"Ash\", 771:\"Squall\", 781:\"Tornado\"\n    //             return \"Atmosphere\";\n    //         case \"8\":\n    //             return id[2] === \"0\" ? \"Clear\" : (id[2] === \"1\" ? \"Cloudy\" : \"Overcast\")\n    //         default:\n    //             return \"Unknown\"\n    //     }\n    // }\n\n\n\n    useEffect(() => {\n\n        const getWeatherForYesterday = async (lat, long) => {\n            let date = getDay(-1);\n            let utc = Math.floor(date.getTime() / 1000);\n            console.log(utc)\n            // https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&appid={API key}\n            const apiHistCall = \"https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=\" +\n                lat + \"&lon=\" + long +\n                \"&dt=\" + utc +\n                \"&appid=\" + WEATHER_API_KEY +\n                \"&units=imperial\";\n            const response = await fetch(apiHistCall); // Generate the Response object\n            if (response.ok) {\n                const jsonValue = await response.json(); // Get JSON value from the response body\n                return Promise.resolve(jsonValue);\n            } else {\n                return Promise.reject('404');\n            }\n        }\n\n        const getWeatherForWeek = async (lat, long) => {\n            const apiHistCall = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n                lat + \"&lon=\" + long +\n                \"&appid=\" + WEATHER_API_KEY +\n                \"&units=imperial\";\n            const response = await fetch(apiHistCall); // Generate the Response object\n            if (response.ok) {\n                const jsonValue = await response.json(); // Get JSON value from the response body\n                return Promise.resolve(jsonValue);\n            } else {\n                return Promise.reject('404');\n            }\n        }\n\n        // setLatitude(\"35.62\");\n        // setLongitude(\"-117.67\");\n        getWeatherForYesterday(\"35.622540\", \"-117.676430\")\n            .then(\n                (yesterday) => {\n                    // console.log(\"yesterday\", yesterday)\n                    // console.log(yesterday[\"current\"][\"weather\"][0][\"main\"])\n                    getWeatherForWeek(\"35.622540\", \"-117.676430\")\n                        .then(\n                            (week) => {\n                                setWeekdays([getDay(-1), getDay(0), getDay(1), getDay(2), getDay(3), getDay(4), getDay(5)])\n                                setWeekDaysWeather([yesterday[\"current\"], week[\"daily\"][0], week[\"daily\"][1], week[\"daily\"][2], week[\"daily\"][3], week[\"daily\"][4], week[\"daily\"][5]]);\n                                setIsLoaded(true);\n                            }\n                        ).catch(\n                            (error) => {\n                                console.log(error);\n                            }\n                        )\n                }\n            ).catch(\n                (error) => {\n                    console.log(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        console.log(weekDaysWeather);\n        return (\n            <WeekContainer>\n                {weekDays.map((day, index) => \n                    {\n                        if (day === weekDays[1]){\n                            return (    \n                                <MainDayCard>\n                                    <DayTitle>\n                                        {weekdays[day.getDay()]}\n                                    </DayTitle>\n                                    <DayNumber>\n                                        {day.getDate()}\n                                    </DayNumber>\n                                    <WeatherIcon>\n                                        <img style={{width:\"calc(1vw + 4rem)\"}} className=\"weatherIcon\" src={cloudyMain} alt=\"weatherIcon\" />\n                                    </WeatherIcon>\n                                    <Month>\n                                        {day.getMonth() + 1}\n                                    </Month>\n                                    <Year>\n                                        {day.getFullYear()}\n                                    </Year>\n                                </MainDayCard>\n                            )\n                        } else {\n                            return (\n                                <DayCard>\n                                    <DayTitle>\n                                        {weekdays[day.getDay()]}\n                                    </DayTitle>\n                                    <DayNumber>\n                                        {day.getDate()}\n                                    </DayNumber>\n                                    {/* {weekDaysWeather[index][\"weather\"][0][\"main\"]} */}\n                                    <WeatherIcon>\n                                        <img style={{width:\"calc(1vw + 4rem)\"}} className=\"weatherIcon\" src={cloudy} alt=\"weatherIcon\" />\n                                    </WeatherIcon>\n                                </DayCard>\n                            )\n                        }\n                    }\n                )}\n            </WeekContainer>\n        );\n    }\n}\n\nexport default MainScreen",["144","145"],"/Users/uwu/Documents/Dev/weather-app/src/App.tsx",[],[],["146","147"],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weatherToday/weatherToday.jsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/config.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/mainStyle.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/images/index.js",[],[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":12,"column":11,"nodeType":"154","messageId":"155","endLine":12,"endColumn":19},{"ruleId":"152","severity":1,"message":"157","line":14,"column":12,"nodeType":"154","messageId":"155","endLine":14,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":14,"column":22,"nodeType":"154","messageId":"155","endLine":14,"endColumn":33},{"ruleId":"152","severity":1,"message":"159","line":15,"column":12,"nodeType":"154","messageId":"155","endLine":15,"endColumn":21},{"ruleId":"152","severity":1,"message":"160","line":15,"column":23,"nodeType":"154","messageId":"155","endLine":15,"endColumn":35},{"ruleId":"152","severity":1,"message":"161","line":17,"column":19,"nodeType":"154","messageId":"155","endLine":17,"endColumn":27},{"ruleId":"148","replacedBy":"162"},{"ruleId":"150","replacedBy":"163"},{"ruleId":"148","replacedBy":"164"},{"ruleId":"150","replacedBy":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'updateScreen' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'latitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'setLongitude' is assigned a value but never used.","'setError' is assigned a value but never used.",["166"],["167"],["166"],["167"],"no-global-assign","no-unsafe-negation"]