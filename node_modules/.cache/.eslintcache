[{"/Users/uwu/Documents/Dev/weather-app/src/index.tsx":"1","/Users/uwu/Documents/Dev/weather-app/src/serviceWorker.ts":"2","/Users/uwu/Documents/Dev/weather-app/src/app/store.ts":"3","/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterSlice.ts":"4","/Users/uwu/Documents/Dev/weather-app/src/features/counter/Counter.tsx":"5","/Users/uwu/Documents/Dev/weather-app/src/app/hooks.ts":"6","/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterAPI.ts":"7","/Users/uwu/Documents/Dev/weather-app/src/configurestore.js":"8","/Users/uwu/Documents/Dev/weather-app/src/ducks/index.js":"9","/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js":"10","/Users/uwu/Documents/Dev/weather-app/src/ducks/game_state.js":"11","/Users/uwu/Documents/Dev/weather-app/src/game-data/card-data.js":"12","/Users/uwu/Documents/Dev/weather-app/src/game-data/affliction-card-data.js":"13","/Users/uwu/Documents/Dev/weather-app/src/game-data/monster-data.js":"14","/Users/uwu/Documents/Dev/weather-app/src/game-data/tracks.js":"15","/Users/uwu/Documents/Dev/weather-app/src/game-data/game-state.js":"16","/Users/uwu/Documents/Dev/weather-app/src/game-data/heros-data.js":"17","/Users/uwu/Documents/Dev/weather-app/src/App.tsx":"18","/Users/uwu/Documents/Dev/weather-app/src/config.js":"19","/Users/uwu/Documents/Dev/weather-app/src/images/index.js":"20","/Users/uwu/Documents/Dev/weather-app/src/components/screens/sources/index.js":"21","/Users/uwu/Documents/Dev/weather-app/src/components/screens/sources/sources.jsx":"22","/Users/uwu/Documents/Dev/weather-app/src/components/source/index.js":"23","/Users/uwu/Documents/Dev/weather-app/src/components/source/source.jsx":"24","/Users/uwu/Documents/Dev/weather-app/src/components/source/sourceStyle.js":"25","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weather/index.js":"26","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weather/weather.jsx":"27","/Users/uwu/Documents/Dev/weather-app/src/components/screens/weather/weatherStyle.js":"28"},{"size":672,"mtime":1650602209983,"results":"29","hashOfConfig":"30"},{"size":5290,"mtime":1645682003815,"results":"31","hashOfConfig":"32"},{"size":447,"mtime":1645682003811,"results":"33","hashOfConfig":"32"},{"size":2989,"mtime":1645682003814,"results":"34","hashOfConfig":"32"},{"size":1776,"mtime":1645682003812,"results":"35","hashOfConfig":"32"},{"size":350,"mtime":1645682003811,"results":"36","hashOfConfig":"32"},{"size":214,"mtime":1645682003813,"results":"37","hashOfConfig":"32"},{"size":555,"mtime":1647825059817,"results":"38","hashOfConfig":"30"},{"size":119,"mtime":1647486752182,"results":"39","hashOfConfig":"30"},{"size":540,"mtime":1650508251306,"results":"40","hashOfConfig":"30"},{"size":1287,"mtime":1645853165692,"results":"41","hashOfConfig":"30"},{"size":3390,"mtime":1645851201473,"results":"42","hashOfConfig":"32"},{"size":1041,"mtime":1645851201472,"results":"43","hashOfConfig":"32"},{"size":5363,"mtime":1645851201475,"results":"44","hashOfConfig":"32"},{"size":2618,"mtime":1645851201477,"results":"45","hashOfConfig":"32"},{"size":105,"mtime":1645851201473,"results":"46","hashOfConfig":"32"},{"size":765,"mtime":1645851201474,"results":"47","hashOfConfig":"32"},{"size":368,"mtime":1650604436737,"results":"48","hashOfConfig":"30"},{"size":101,"mtime":1647819403246,"results":"49","hashOfConfig":"30"},{"size":1204,"mtime":1649824542578,"results":"50","hashOfConfig":"30"},{"size":41,"mtime":1650507858304,"results":"51","hashOfConfig":"30"},{"size":3476,"mtime":1650508403110,"results":"52","hashOfConfig":"30"},{"size":40,"mtime":1649807454197,"results":"53","hashOfConfig":"30"},{"size":881,"mtime":1649808956750,"results":"54","hashOfConfig":"30"},{"size":162,"mtime":1649807281000,"results":"55","hashOfConfig":"30"},{"size":41,"mtime":1650508401083,"results":"56","hashOfConfig":"30"},{"size":11770,"mtime":1651810115932,"results":"57","hashOfConfig":"30"},{"size":4190,"mtime":1651814525570,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c63hce",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15z1oec",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/uwu/Documents/Dev/weather-app/src/index.tsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/serviceWorker.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/app/store.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterSlice.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/Counter.tsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/app/hooks.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/features/counter/counterAPI.ts",[],[],"/Users/uwu/Documents/Dev/weather-app/src/configurestore.js",[],[],["150","151"],"/Users/uwu/Documents/Dev/weather-app/src/ducks/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js",[],[],["152","153"],"/Users/uwu/Documents/Dev/weather-app/src/ducks/game_state.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/card-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/affliction-card-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/monster-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/tracks.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/game-state.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/game-data/heros-data.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/App.tsx",[],[],["154","155"],"/Users/uwu/Documents/Dev/weather-app/src/config.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/images/index.js",[],[],["156","157"],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/sources/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/sources/sources.jsx",["158"],[],"import { useDispatch } from \"react-redux\";\nimport { updateScreen } from \"../../../ducks/screen\";\nimport {\n  sunMain,\n  rainMain,\n  heavyRainMain,\n  lightRainMain,\n  snowMain,\n  cloudMain,\n  cloudsMain,\n  partlyCloudyMain,\n  thunderstormMain,\n  brokenCloudsMain,\n  location,\n} from \"../../../images\";\nimport Source from \"../../source\";\n\nconst SourcesScreen = () => {\n  const dispatch = useDispatch();\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\", backgroundColor: \"black\" }}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          color: \"white\",\n          padding: \"10px\",\n          fontWeight: \"bold\",\n        }}\n      >\n        Icons provided by flaticon.com\n      </div>\n\n      <div style={{ position: \"absolute\", right: 10, bottom: 10 }}>\n        <button onClick={() => dispatch(updateScreen(\"Main\"))}>back</button>\n      </div>\n\n      <div\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/sun\"\n          icon={sunMain}\n          iconName=\"Sun\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/cloud\"\n          icon={cloudMain}\n          iconName=\"Cloud\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/light-rain\"\n          icon={lightRainMain}\n          iconName=\"Light Rain\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/rain\"\n          icon={rainMain}\n          iconName=\"Rain\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/heavy-rain\"\n          icon={heavyRainMain}\n          iconName=\"Heavy Rain\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/snow\"\n          icon={snowMain}\n          iconName=\"Snow\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/thunder\"\n          icon={thunderstormMain}\n          iconName=\"Thunder\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/overcast\"\n          icon={cloudsMain}\n          iconName=\"Clouds\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/partly-cloudy\"\n          icon={partlyCloudyMain}\n          iconName=\"Partly Cloudy\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/broken-clouds\"\n          icon={brokenCloudsMain}\n          iconName=\"Broken Clouds\"\n          author=\"Sudowoodo\"\n        />\n        <Source\n          iconLink=\"https://www.flaticon.com/free-icons/location\"\n          icon={location}\n          iconName=\"Location\"\n          author=\"Freepik\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SourcesScreen;\n\n{\n  /* \n    <a href=\"https://www.flaticon.com/free-icons/cloud\" title=\"cloud icons\">Cloud icons created by juicy_fish - Flaticon</a>\n    <div><a href=\"https://www.flaticon.com/free-icons/partly-cloudy\" title=\"partly cloudy icons\">Partly cloudy icons created by Sudowoodo - Flaticon</a></div>\n    <div><a href=\"https://www.flaticon.com/free-icons/cloudy\" title=\"cloudy icons\">Cloudy icons created by Freepik - Flaticon</a></div> */\n}\n","/Users/uwu/Documents/Dev/weather-app/src/components/source/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/source/source.jsx",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/source/sourceStyle.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weather/index.js",[],[],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weather/weather.jsx",["159","160","161","162","163","164"],[],"import { useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { updateScreen } from \"../../../ducks/screen\";\nimport {\n  WeekContainer,\n  MainDayCard,\n  DayCard,\n  DayTitle,\n  DayNumber,\n  WeatherIcon,\n  Month,\n  Year,\n  SourceButton,\n  SelectedBar,\n  Icon,\n  SourceContainer,\n  MonthContainer,\n  Description,\n  WeatherContainer,\n  LocationContainer,\n  Location,\n  SideBar,\n  PersonaScreen,\n} from \"./weatherStyle\";\nimport {\n  sun,\n  sunMain,\n  rain,\n  rainMain,\n  snow,\n  snowMain,\n  cloud,\n  cloudMain,\n  clouds,\n  cloudsMain,\n  partlyCloudy,\n  partlyCloudyMain,\n  thunderstorm,\n  thunderstormMain,\n  brokenClouds,\n  brokenCloudsMain,\n  location,\n} from \"../../../images\";\nimport { computeHeadingLevel } from \"@testing-library/dom\";\n\nconst { WEATHER_API_KEY } = require(\"../../../config\");\n\nconst PersonaWeather = () => {\n  // const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dispatch = useDispatch();\n  const weekdays = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n\n  const cities = {\n    santa_barbara: [34.42083, -119.698189],\n    los_angeles: [34.052235, -118.243683],\n    san_francisco: [37.773972, -122.431297],\n    san_diego: [32.7157, -117.1611],\n  };\n\n  const randomProperty = (obj) => {\n    var keys = Object.keys(obj);\n    return obj[keys[(keys.length * Math.random()) << 0]];\n  };\n\n  let initCity = randomProperty(cities);\n  const [latitude, setLatitude] = useState(initCity[0]);\n  const [longitude, setLongitude] = useState(initCity[1]);\n\n  const [geoButtonState, setGeoButtonState] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [weekDays, setWeekdays] = useState([]);\n  const [weekDaysWeather, setWeekDaysWeather] = useState([]);\n\n  const [city, setCity] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n  const [selectedDay, setSelectedDay] = useState(1);\n\n  // #a2a2a2 normal\n  // #3783f0 main\n\n  const getDay = (delta) => {\n    let date = new Date();\n    const previous = new Date(date.getTime());\n    previous.setDate(date.getDate() + delta);\n    return previous;\n  };\n\n  const idToWeatherIcon = (id, isMainDay) => {\n    switch (id) {\n      case 200:\n      case 201:\n      case 202:\n      case 210:\n      case 211:\n      case 212:\n      case 221:\n      case 230:\n      case 231:\n      case 232:\n        return isMainDay ? thunderstormMain : thunderstorm;\n      case 300:\n      case 301:\n      case 302:\n      case 310:\n      case 311:\n      case 312:\n      case 313:\n      case 314:\n      case 321:\n        return isMainDay ? \"drizzleMain\" : \"drizzle\";\n      case 500:\n      case 501:\n      case 502:\n      case 503:\n      case 504:\n        return isMainDay ? rainMain : rain;\n      case 511:\n        return isMainDay ? \"iceRainMain\" : \"iceRain\";\n      case 520:\n      case 521:\n      case 522:\n      case 531:\n        return isMainDay ? \"intenseRainMain\" : \"intenseRain\";\n      case 600:\n      case 601:\n      case 602:\n      case 611:\n      case 612:\n      case 613:\n      case 615:\n      case 616:\n      case 620:\n      case 621:\n      case 622:\n        return isMainDay ? snowMain : snow;\n      case 701:\n        return isMainDay ? \"mistMain\" : \"mist\";\n      case 711:\n        return isMainDay ? \"smokeMain\" : \"smoke\";\n      case 721:\n        return isMainDay ? \"hazeMain\" : \"haze\";\n      case 731:\n        return isMainDay ? \"dustWhirlsMain\" : \"dustWhirls\";\n      case 741:\n        return isMainDay ? \"fogMain\" : \"fog\";\n      case 751:\n        return isMainDay ? \"sandMain\" : \"sand\";\n      case 761:\n        return isMainDay ? \"dustMain\" : \"dust\";\n      case 762:\n        return isMainDay ? \"ashMain\" : \"ash\";\n      case 771:\n        return isMainDay ? \"squallMain\" : \"squall\";\n      case 781:\n        return isMainDay ? \"tornadoMain\" : \"tornado\";\n      case 800:\n        return isMainDay ? sunMain : sun;\n      case 801:\n        return isMainDay ? partlyCloudyMain : partlyCloudy;\n      case 802:\n        return isMainDay ? cloudMain : cloud;\n      case 803:\n        return isMainDay ? cloudsMain : clouds;\n      case 804:\n        return isMainDay ? brokenCloudsMain : brokenClouds;\n      default:\n        return isMainDay ? \"atmosphereMain\" : \"atmosphere\";\n    }\n  };\n\n  const getGeolocation = () => {\n    setGeoButtonState(true);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, fail);\n    } else {\n      alert(\"Sorry, your browser does not support geolocation services.\");\n    }\n  };\n\n  const success = (position) => {\n    setLongitude(position[\"coords\"][\"longitude\"]);\n    setLatitude(position[\"coords\"][\"latitude\"]);\n    setGeoButtonState(false);\n  };\n\n  const fail = () => {\n    setGeoButtonState(false);\n  };\n\n  const pupulateWeekWeather = async () => {\n    const yesterdayWeather = await getWeatherForYesterday(latitude, longitude);\n    const weatherForTheWeek = await getWeatherForWeek(latitude, longitude);\n    setWeekdays([\n      getDay(-1),\n      getDay(0),\n      getDay(1),\n      getDay(2),\n      getDay(3),\n      getDay(4),\n      getDay(5),\n    ]);\n    setWeekDaysWeather([\n      yesterdayWeather[\"current\"],\n      weatherForTheWeek[\"daily\"][0],\n      weatherForTheWeek[\"daily\"][1],\n      weatherForTheWeek[\"daily\"][2],\n      weatherForTheWeek[\"daily\"][3],\n      weatherForTheWeek[\"daily\"][4],\n      weatherForTheWeek[\"daily\"][5],\n    ]);\n    setIsLoaded(true);\n  };\n\n  const getWeatherForYesterday = async (lat, long) => {\n    let date = getDay(-1);\n    let utc = Math.floor(date.getTime() / 1000);\n    const apiHistCall =\n      \"https://api.openweathermap.org/data/2.5/onecall/timemachine?\" +\n      \"lat=\" +\n      lat +\n      \"&lon=\" +\n      long +\n      \"&dt=\" +\n      utc +\n      \"&appid=\" +\n      WEATHER_API_KEY +\n      \"&units=imperial\";\n    const response = await fetch(apiHistCall); // Generate the Response object\n    if (response.ok) {\n      const jsonValue = await response.json(); // Get JSON value from the response body\n      return Promise.resolve(jsonValue);\n    } else {\n      return Promise.reject(\"404\");\n    }\n  };\n\n  const getWeatherForWeek = async (lat, long) => {\n    const apiHistCall =\n      \"https://api.openweathermap.org/data/2.5/onecall?\" +\n      \"lat=\" +\n      lat +\n      \"&lon=\" +\n      long +\n      \"&appid=\" +\n      WEATHER_API_KEY +\n      \"&units=imperial\";\n    const response = await fetch(apiHistCall); // Generate the Response object\n    if (response.ok) {\n      const jsonValue = await response.json(); // Get JSON value from the response body\n      return Promise.resolve(jsonValue);\n    } else {\n      return Promise.reject(\"404\");\n    }\n  };\n\n  const locateUser = async (latitude, longitude) => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"X-RapidAPI-Host\": \"forward-reverse-geocoding.p.rapidapi.com\",\n        \"X-RapidAPI-Key\": \"8f72f2c6c8msh17c86ab914bf79bp1252dcjsnc1f7c6eb8ee5\",\n      },\n    };\n\n    const reverseGeocodingEndpoint =\n      \"https://forward-reverse-geocoding.p.rapidapi.com/v1/reverse\";\n    const reverseGeocoding = `${reverseGeocodingEndpoint}?lat=${latitude}&lon=${longitude}&accept-language=en&polygon_threshold=0.0`;\n\n    try {\n      const response = await fetch(reverseGeocoding, options);\n      const data = await response.json();\n      console.log(data);\n      setCity(data?.address?.city);\n      setTown(data?.address?.town);\n      setState(data?.address?.state);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const moveSelectedToMe = (index) => {\n    let selected = document.getElementById(\"selected\");\n    selected.style.marginLeft =\n      \"max(\" + index * 10 + \"vw,\" + index * 100 + \"px)\";\n    selected.style.marginRight = index * -100 + \"px\";\n\n    document.getElementById(index + \"month\").style.display = \"block\";\n    document.getElementById(index + \"year\").style.display = \"block\";\n\n    document.getElementById(selectedDay + \"month\").style.display = \"none\";\n    document.getElementById(selectedDay + \"year\").style.display = \"none\";\n    setSelectedDay(index);\n  };\n\n  useEffect(() => {\n    pupulateWeekWeather();\n    locateUser(latitude, longitude);\n  }, [latitude, longitude]);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <LocationContainer id=\"locationInfo\">\n          <div>{state}</div>\n          <div>{city}</div>\n          <div>{town}</div>\n          <div style={{ position: \"absolute\", right: 2, top: 7 }}>\n            <Location onClick={(event) => getGeolocation(event)}></Location>\n          </div>\n        </LocationContainer>\n        <SourceContainer>\n          <SourceButton onClick={() => dispatch(updateScreen(\"Sources\"))}>\n            sources\n          </SourceButton>\n        </SourceContainer>\n        <PersonaScreen>\n          <SideBar id=\"leftSide\"></SideBar>\n          <WeatherContainer>\n            <SelectedBar id=\"selected\"></SelectedBar>\n            <WeekContainer>\n              {weekDays.map((day, index) => {\n                if (index === 1) {\n                  return (\n                    <DayCard\n                      id={index}\n                      onClick={(e) => moveSelectedToMe(index)}\n                    >\n                      <DayTitle>{weekdays[day.getDay()]}</DayTitle>\n                      <DayNumber>{day.getDate()}</DayNumber>\n                      <WeatherIcon>\n                        <Icon\n                          src={idToWeatherIcon(\n                            weekDaysWeather[index][\"weather\"][0][\"id\"],\n                            true\n                          )}\n                          alt=\"weatherIcon\"\n                        />\n                      </WeatherIcon>\n                      <Description id={index + \"description\"}>\n                        {weekDaysWeather[index][\"weather\"][0][\"description\"]}\n                      </Description>\n                      <MonthContainer id={index + \"month\"}>\n                        <Month>{day.getMonth() + 1}</Month>\n                      </MonthContainer>\n                      <Year id={index + \"year\"}>{day.getFullYear()}</Year>\n                    </DayCard>\n                  );\n                } else {\n                  return (\n                    <DayCard\n                      id={index}\n                      onClick={(e) => moveSelectedToMe(index)}\n                    >\n                      <DayTitle>{weekdays[day.getDay()]}</DayTitle>\n                      <DayNumber>{day.getDate()}</DayNumber>\n                      <WeatherIcon>\n                        <Icon\n                          src={idToWeatherIcon(\n                            weekDaysWeather[index][\"weather\"][0][\"id\"],\n                            true\n                          )}\n                          alt=\"weatherIcon\"\n                        />\n                      </WeatherIcon>\n                      <Description id={index + \"description\"}>\n                        {weekDaysWeather[index][\"weather\"][0][\"description\"]}\n                      </Description>\n                      <MonthContainer\n                        style={{ display: \"none\" }}\n                        id={index + \"month\"}\n                      >\n                        <Month>{day.getMonth() + 1}</Month>\n                      </MonthContainer>\n                      <Year style={{ display: \"none\" }} id={index + \"year\"}>\n                        {day.getFullYear()}\n                      </Year>\n                    </DayCard>\n                  );\n                }\n              })}\n            </WeekContainer>\n          </WeatherContainer>\n        </PersonaScreen>\n      </>\n    );\n  }\n};\n\nexport default PersonaWeather;\n",["165","166"],"/Users/uwu/Documents/Dev/weather-app/src/components/screens/weather/weatherStyle.js",[],[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"169","replacedBy":"172"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"169","replacedBy":"172"},{"ruleId":"167","replacedBy":"173"},{"ruleId":"169","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":114,"column":1,"nodeType":"177","messageId":"178","endLine":119,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":6,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":42,"column":3,"nodeType":"181","messageId":"182","endLine":42,"endColumn":11},{"ruleId":"179","severity":1,"message":"184","line":44,"column":10,"nodeType":"181","messageId":"182","endLine":44,"endColumn":29},{"ruleId":"179","severity":1,"message":"185","line":69,"column":10,"nodeType":"181","messageId":"182","endLine":69,"endColumn":24},{"ruleId":"179","severity":1,"message":"186","line":70,"column":17,"nodeType":"181","messageId":"182","endLine":70,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":301,"column":6,"nodeType":"189","endLine":301,"endColumn":27,"suggestions":"190"},{"ruleId":"167","replacedBy":"191"},{"ruleId":"169","replacedBy":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],["193"],["194"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'MainDayCard' is defined but never used.","Identifier","unusedVar","'location' is defined but never used.","'computeHeadingLevel' is defined but never used.","'geoButtonState' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pupulateWeekWeather'. Either include it or remove the dependency array.","ArrayExpression",["195"],["193"],["194"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [latitude, longitude, pupulateWeekWeather]",{"range":"198","text":"199"},[8212,8233],"[latitude, longitude, pupulateWeekWeather]"]