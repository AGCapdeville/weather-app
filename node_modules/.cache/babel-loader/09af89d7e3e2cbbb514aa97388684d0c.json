{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { track_list } from \"../game-data/tracks\";\nexport const setTrack = createAction('music/SET_TRACK');\nexport const load = createAction('music/LOAD');\nexport const loop = createAction('music/LOOP');\nexport const mute = createAction('music/MUTE');\nexport const updateVolume = createAction('music/UPDATE_VOLUME');\nconst initialState = {\n  curr_track: document.createElement('audio'),\n  is_playing: false,\n  is_looping: false,\n  is_muted: true,\n  curr_volume: parseFloat(0.5)\n};\n\nconst reduceMuteTrack = _ref => {\n  let {\n    curr_track,\n    is_muted,\n    ...rest\n  } = _ref;\n\n  if (is_muted) {\n    curr_track.muted = false;\n    return { ...rest,\n      is_muted: false,\n      curr_track: curr_track\n    };\n  } else {\n    curr_track.muted = true;\n    return { ...rest,\n      is_muted: true,\n      curr_track: curr_track\n    };\n  }\n};\n\nconst reduceLoadTrack = _ref2 => {\n  let {\n    curr_track,\n    track,\n    is_looping,\n    curr_volume,\n    ...rest\n  } = _ref2;\n  curr_track.src = track.path;\n  curr_track.load();\n  curr_track.autoplay = true;\n  curr_track.loop = is_looping;\n  curr_track.volume = curr_volume;\n  return { ...rest,\n    curr_track: curr_track,\n    track: track,\n    is_looping: is_looping,\n    curr_volume: curr_volume\n  };\n};\n\nconst reduceUpdateVoulme = (state, volume) => {\n  state.curr_volume = parseFloat(volume);\n  state.curr_track.volume = parseFloat(volume);\n};\n\nexport default handleActions({\n  [setTrack]: (state, action) => ({ ...state,\n    track: action.payload\n  }),\n  [load]: reduceLoadTrack,\n  [loop]: (state, action) => ({ ...state,\n    is_looping: action.payload\n  }),\n  [mute]: reduceMuteTrack,\n  [updateVolume]: (state, action) => {\n    reduceUpdateVoulme(state, action.payload);\n    return { ...state,\n      curr_volume: parseFloat(action.payload)\n    };\n  }\n}, initialState);\nconst selectMusic = createSelector(state => state.music, music => music);\nexport const useMusic = () => {\n  _s();\n\n  return useSelector(selectMusic);\n};\n\n_s(useMusic, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Users/uwu/Documents/Dev/weather-app/src/ducks/music.js"],"names":["createAction","handleActions","useSelector","createSelector","track_list","setTrack","load","loop","mute","updateVolume","initialState","curr_track","document","createElement","is_playing","is_looping","is_muted","curr_volume","parseFloat","reduceMuteTrack","rest","muted","reduceLoadTrack","track","src","path","autoplay","volume","reduceUpdateVoulme","state","action","payload","selectMusic","music","useMusic"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport {track_list} from \"../game-data/tracks\"\n\nexport const setTrack = createAction('music/SET_TRACK');\nexport const load = createAction('music/LOAD');\nexport const loop = createAction('music/LOOP');\nexport const mute = createAction('music/MUTE');\nexport const updateVolume = createAction('music/UPDATE_VOLUME');\n\n\nconst initialState = {\n    curr_track : document.createElement('audio'),\n    is_playing : false,\n    is_looping : false,\n    is_muted: true,\n    curr_volume: parseFloat(0.5),\n}\n\nconst reduceMuteTrack = ({ curr_track, is_muted, ...rest}) => {\n    if (is_muted){\n        curr_track.muted = false\n        return { ...rest, is_muted: false, curr_track: curr_track}\n    }else{\n        curr_track.muted = true\n        return { ...rest, is_muted: true, curr_track: curr_track}\n    }\n}\n\nconst reduceLoadTrack = ({ curr_track, track, is_looping, curr_volume, ...rest}) => {\n    curr_track.src = track.path;\n    curr_track.load();\n    curr_track.autoplay = true; \n    curr_track.loop = is_looping;\n    curr_track.volume = curr_volume;\n    return { ...rest, curr_track: curr_track, track: track, is_looping: is_looping, curr_volume: curr_volume }\n}\n\nconst reduceUpdateVoulme = (state, volume) => {\n    state.curr_volume = parseFloat(volume);\n    state.curr_track.volume = parseFloat(volume);\n}\n\nexport default handleActions({\n    [setTrack]: (state, action) => ({ ...state, track: action.payload}),\n    [load]: reduceLoadTrack,\n    [loop]: (state, action) => ({ ...state, is_looping: action.payload}),\n    [mute]: reduceMuteTrack,\n    [updateVolume]: (state, action) => {\n        reduceUpdateVoulme( state, action.payload )\n        return({ ...state, curr_volume: parseFloat(action.payload)})\n    }\n}, initialState);\n\n\nconst selectMusic = createSelector(\n    state => state.music,\n    music => music   \n)\n\nexport const useMusic = () => useSelector(selectMusic);\n"]},"metadata":{},"sourceType":"module"}