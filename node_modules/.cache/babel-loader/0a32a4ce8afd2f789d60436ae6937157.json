{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { monsters } from '../game-data/monster-data'; // export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\n\nexport const spawnMonster = createAction('monster/SPAWN_MONSTER');\nexport const updateMonster = createAction('monster/UPDATE_MONSTER');\nexport const spawnFloorBoss = createAction('monster/SPAWN_FLOOR_BOSS');\nconst initialState = {};\nexport default handleActions({\n  [spawnMonster]: (state, action) => ({ ...state,\n    ...monsters.find(m => action.payload === m.name)\n  }),\n  [spawnFloorBoss]: (state, action) => ({ ...state,\n    ...action.payload\n  }),\n  [updateMonster]: (state, action) => {\n    return { ...state,\n      ...action.payload\n    };\n  }\n}, initialState); // how we grab data from the store\n\nconst selectMonster = createSelector(state => state.monster, monster => monster);\nexport const useMonster = () => {\n  _s();\n\n  return useSelector(selectMonster);\n};\n\n_s(useMonster, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Users/uwu/Documents/Dev/weather-app/src/ducks/monster.js"],"names":["createAction","handleActions","useSelector","createSelector","monsters","spawnMonster","updateMonster","spawnFloorBoss","initialState","state","action","find","m","payload","name","selectMonster","monster","useMonster"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,2BAAzB,C,CAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAGL,YAAY,CAAC,uBAAD,CAAjC;AACP,OAAO,MAAMM,aAAa,GAAGN,YAAY,CAAC,wBAAD,CAAlC;AACP,OAAO,MAAMO,cAAc,GAAGP,YAAY,CAAC,0BAAD,CAAnC;AAGP,MAAMQ,YAAY,GAAG,EAArB;AAGA,eAAeP,aAAa,CAAC;AACzB,GAACI,YAAD,GAAgB,CAACI,KAAD,EAAQC,MAAR,MAAoB,EAChC,GAAGD,KAD6B;AAEhC,OAAGL,QAAQ,CAACO,IAAT,CAAeC,CAAC,IAAIF,MAAM,CAACG,OAAP,KAAmBD,CAAC,CAACE,IAAzC;AAF6B,GAApB,CADS;AAKzB,GAACP,cAAD,GAAkB,CAACE,KAAD,EAAQC,MAAR,MAAoB,EAAC,GAAGD,KAAJ;AAAW,OAAGC,MAAM,CAACG;AAArB,GAApB,CALO;AAMzB,GAACP,aAAD,GAAiB,CAACG,KAAD,EAAQC,MAAR,KAAmB;AAChC,WAAQ,EAAE,GAAGD,KAAL;AAAY,SAAGC,MAAM,CAACG;AAAtB,KAAR;AACH;AARwB,CAAD,EASzBL,YATyB,CAA5B,C,CAYA;;AACA,MAAMO,aAAa,GAAGZ,cAAc,CAChCM,KAAK,IAAIA,KAAK,CAACO,OADiB,EAEhCA,OAAO,IAAIA,OAFqB,CAApC;AAKA,OAAO,MAAMC,UAAU,GAAG;AAAA;;AAAA,SAAMf,WAAW,CAACa,aAAD,CAAjB;AAAA,CAAnB;;GAAME,U;UAAmBf,W","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { monsters } from '../game-data/monster-data';\n\n// export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\nexport const spawnMonster = createAction('monster/SPAWN_MONSTER');\nexport const updateMonster = createAction('monster/UPDATE_MONSTER');\nexport const spawnFloorBoss = createAction('monster/SPAWN_FLOOR_BOSS');\n\n\nconst initialState = { };\n\n\nexport default handleActions({\n    [spawnMonster]: (state, action) => ({\n        ...state, \n        ...monsters.find( m => action.payload === m.name),\n    }),\n    [spawnFloorBoss]: (state, action) => ({...state, ...action.payload}),\n    [updateMonster]: (state, action) => {\n        return ({ ...state, ...action.payload })\n    },\n}, initialState);\n \n\n// how we grab data from the store\nconst selectMonster = createSelector(\n    state => state.monster,\n    monster => monster   \n)\n\nexport const useMonster = () => useSelector(selectMonster);\n\n"]},"metadata":{},"sourceType":"module"}