{"ast":null,"code":"var _jsxFileName = \"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx\",\n    _s = $RefreshSig$();\n\n// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({});\n  const apiKey = \"d759058e687e86fb9d57337061f496e5\";\n  const lat = 35.624947;\n  const long = -117.679637;\n  const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + lat + \"&lon=\" + long + \"&appid=\" + apiKey + \"&units=imperial\"; // const displayScreen = () => {\n  //     dispatch(updateScreen(\"WeatherToday\"))\n  // }\n  // Function to do an Ajax call\n\n  const doAjax = async apiToCall => {\n    const response = await fetch(apiToCall); // Generate the Response object\n\n    if (response.ok) {\n      const jsonValue = await response.json(); // Get JSON value from the response body\n\n      return Promise.resolve(jsonValue);\n    } else {\n      return Promise.reject('404');\n    }\n  };\n\n  useEffect(() => {\n    //     fetch(apiCall)\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             setIsLoaded(true);\n    //             setItems(result);\n    //         },\n    //         // Note: it's important to handle errors here\n    //         // instead of a catch() block so that we don't swallow\n    //         // exceptions from actual bugs in components.\n    //         (error) => {\n    //         setIsLoaded(true);\n    //         setError(error);\n    //         }\n    //     )\n    // Call the function and output value or error message to console\n    // doAjax(apiCall)\n    //     .then(console.log)\n    //     .catch(console.log);\n    doAjax(apiCall).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }).catch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"weather time...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this); // if (error) {\n  //     return <div>Error: {error.message}</div>;\n  // } else if (!isLoaded) {\n  //     return <div>Loading...</div>;\n  // } else {\n  //     return (\n  //         <div>\n  //             {items}\n  //         </div>\n  //     );\n  // }\n  // return (\n  //     <div>\n  //         <div>Welcome to weather anime</div>\n  //         <button onClick={() => displayScreen()}>Weather Today</button>\n  //     </div>\n  // );\n};\n\n_s(MainScreen, \"tK5Nqr+tgZRidzHoRAaYn7zdLmE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"sources":["/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx"],"names":["updateScreen","useDispatch","useState","useEffect","MainScreen","dispatch","error","setError","isLoaded","setIsLoaded","items","setItems","apiKey","lat","long","apiCall","doAjax","apiToCall","response","fetch","ok","jsonValue","json","Promise","resolve","reject","then","result","catch"],"mappings":";;;AAAA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,MAAM,GAAG,kCAAf;AACA,QAAMC,GAAG,GAAG,SAAZ;AACA,QAAMC,IAAI,GAAG,CAAC,UAAd;AACA,QAAMC,OAAO,GAAG,yDAAyDF,GAAzD,GAA+D,OAA/D,GAAyEC,IAAzE,GAAgF,SAAhF,GAA4FF,MAA5F,GAAqG,iBAArH,CAVqB,CAWrB;AACA;AACA;AAGA;;AACA,QAAMI,MAAM,GAAG,MAAOC,SAAP,IAAqB;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAD,CAA5B,CADgC,CACS;;AACzC,QAAIC,QAAQ,CAACE,EAAb,EAAiB;AACb,YAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAxB,CADa,CAC4B;;AACzC,aAAOC,OAAO,CAACC,OAAR,CAAgBH,SAAhB,CAAP;AACH,KAHD,MAGO;AACH,aAAOE,OAAO,CAACE,MAAR,CAAe,KAAf,CAAP;AACH;AACJ,GARD;;AAUAtB,EAAAA,SAAS,CAAC,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AACA;AACA;AACA;AAEAa,IAAAA,MAAM,CAACD,OAAD,CAAN,CACKW,IADL,CAESC,MAAD,IAAY;AACRlB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACgB,MAAD,CAAR;AACH,KALT,EAOKC,KAPL;AAWH,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CA/DqB,CAiErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,CAnFD;;GAAMxB,U;UACeH,W;;;KADfG,U;AAqFN,eAAeA,UAAf","sourcesContent":["// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\n\n\nconst MainScreen = () => {\n    const dispatch = useDispatch()\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState({});\n\n    const apiKey = \"d759058e687e86fb9d57337061f496e5\"\n    const lat = 35.624947;\n    const long = -117.679637;\n    const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + lat + \"&lon=\" + long + \"&appid=\" + apiKey + \"&units=imperial\"\n    // const displayScreen = () => {\n    //     dispatch(updateScreen(\"WeatherToday\"))\n    // }\n\n\n    // Function to do an Ajax call\n    const doAjax = async (apiToCall) => {\n        const response = await fetch(apiToCall); // Generate the Response object\n        if (response.ok) {\n            const jsonValue = await response.json(); // Get JSON value from the response body\n            return Promise.resolve(jsonValue);\n        } else {\n            return Promise.reject('404');\n        }\n    }\n\n    useEffect(() => {\n    //     fetch(apiCall)\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             setIsLoaded(true);\n    //             setItems(result);\n    //         },\n    //         // Note: it's important to handle errors here\n    //         // instead of a catch() block so that we don't swallow\n    //         // exceptions from actual bugs in components.\n    //         (error) => {\n    //         setIsLoaded(true);\n    //         setError(error);\n    //         }\n    //     )\n        \n\n        // Call the function and output value or error message to console\n        // doAjax(apiCall)\n        //     .then(console.log)\n        //     .catch(console.log);\n\n        doAjax(apiCall)\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                }\n            )\n            .catch(\n\n            );\n\n    }, [])\n\n    return <div>weather time...</div>;\n\n    // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //     return <div>Loading...</div>;\n    // } else {\n    //     return (\n    //         <div>\n    //             {items}\n    //         </div>\n    //     );\n    // }\n\n    // return (\n    //     <div>\n    //         <div>Welcome to weather anime</div>\n    //         <button onClick={() => displayScreen()}>Weather Today</button>\n    //     </div>\n    // );\n}\n\nexport default MainScreen"]},"metadata":{},"sourceType":"module"}