{"ast":null,"code":"var _jsxFileName = \"/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx\",\n    _s = $RefreshSig$();\n\n// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  alert(\"hello! Gimi zip code!\");\n  const weatherKey = \"d759058e687e86fb9d57337061f496e5\";\n  const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={d759058e687e86fb9d57337061f496e5}\";\n\n  const displayScreen = () => {\n    dispatch(updateScreen(\"WeatherToday\"));\n  };\n\n  useEffect(() => {\n    fetch(apiCall).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //     <div>\n  //         <div>Welcome to weather anime</div>\n  //         <button onClick={() => displayScreen()}>Weather Today</button>\n  //     </div>\n  // );\n\n};\n\n_s(MainScreen, \"dtlCXfO912qhya7rziKls4/P8r8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"sources":["/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx"],"names":["updateScreen","useDispatch","useEffect","MainScreen","dispatch","error","setError","useState","isLoaded","setIsLoaded","items","setItems","alert","weatherKey","apiCall","displayScreen","fetch","then","res","json","result","message","map","item","name","price","id"],"mappings":";;;AAAA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAK,EAAAA,KAAK,CAAC,uBAAD,CAAL;AAEA,QAAMC,UAAU,GAAG,kCAAnB;AACA,QAAMC,OAAO,GAAG,8GAAhB;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBX,IAAAA,QAAQ,CAACJ,YAAY,CAAC,cAAD,CAAb,CAAR;AACH,GAFD;;AAIAE,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAACF,OAAD,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACRX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACS,MAAD,CAAR;AACH,KANL,EAOI;AACA;AACA;AACCf,IAAAA,KAAD,IAAW;AACXI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC,KAbL;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACgB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACb,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA,gBACCE,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACX;AAAA,mBACCA,IAAI,CAACC,IADN,OACaD,IAAI,CAACE,KADlB;AAAA,SAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAhDoB,CAkDrB;AACA;AACA;AACA;AACA;AACA;;AACH,CAxDD;;GAAMvB,U;UACeF,W;;;KADfE,U;AA0DN,eAAeA,UAAf","sourcesContent":["// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\n\nconst MainScreen = () => {\n    const dispatch = useDispatch()\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    alert(\"hello! Gimi zip code!\")\n\n    const weatherKey = \"d759058e687e86fb9d57337061f496e5\";\n    const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={d759058e687e86fb9d57337061f496e5}\"\n\n    const displayScreen = () => {\n        dispatch(updateScreen(\"WeatherToday\"))\n    }\n\n    useEffect(() => {\n        fetch(apiCall)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);\n                setItems(result);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <ul>\n            {items.map(item => (\n                <li key={item.id}>\n                {item.name} {item.price}\n                </li>\n            ))}\n            </ul>\n        );\n    }\n\n    // return (\n    //     <div>\n    //         <div>Welcome to weather anime</div>\n    //         <button onClick={() => displayScreen()}>Weather Today</button>\n    //     </div>\n    // );\n}\n\nexport default MainScreen"]},"metadata":{},"sourceType":"module"}