{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nexport const updateScreen = createAction('screen/UPDATE_SCREEN');\nconst initialSreenState = 'Main';\nexport default handleActions({\n  [updateScreen]: (state, action) => {\n    return state = action.payload;\n  }\n}, initialSreenState);\nconst selectScreen = createSelector(state => state.screen, screen => screen);\nexport const useScreen = () => {\n  _s();\n\n  return useSelector(selectScreen);\n};\n\n_s(useScreen, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const transition_animation = toScreen => {\n  let overlayT = document.getElementById(\"overlayT\");\n  let transitionTime = 1000;\n\n  if (toScreen === 'Combat') {\n    transitionTime = 600;\n  }\n\n  if (toScreen === 'Resolution') {\n    transitionTime = 300;\n  }\n\n  overlayT.animate([{\n    opacity: 1,\n    backgroundColor: 'white',\n    zIndex: 100\n  }, {\n    opacity: 1,\n    backgroundColor: 'black',\n    zIndex: 100\n  }, {\n    opacity: 0,\n    zIndex: 100\n  }], {\n    duration: transitionTime,\n    iterations: 1\n  });\n};","map":{"version":3,"sources":["/Users/uwu/Documents/Dev/weather-app/src/ducks/screen.js"],"names":["createAction","handleActions","useSelector","createSelector","updateScreen","initialSreenState","state","action","payload","selectScreen","screen","useScreen","transition_animation","toScreen","overlayT","document","getElementById","transitionTime","animate","opacity","backgroundColor","zIndex","duration","iterations"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,YAAY,GAAGJ,YAAY,CAAC,sBAAD,CAAjC;AACP,MAAMK,iBAAiB,GAAG,MAA1B;AAGA,eAAeJ,aAAa,CAAC;AACzB,GAACG,YAAD,GAAgB,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAC/B,WAAOD,KAAK,GAACC,MAAM,CAACC,OAApB;AACH;AAHwB,CAAD,EAIzBH,iBAJyB,CAA5B;AAMA,MAAMI,YAAY,GAAGN,cAAc,CAC/BG,KAAK,IAAIA,KAAK,CAACI,MADgB,EAE/BA,MAAM,IAAIA,MAFqB,CAAnC;AAKA,OAAO,MAAMC,SAAS,GAAG;AAAA;;AAAA,SAAMT,WAAW,CAACO,YAAD,CAAjB;AAAA,CAAlB;;GAAME,S;UAAkBT,W;;;AAG/B,OAAO,MAAMU,oBAAoB,GAAIC,QAAD,IAAc;AAE9C,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;AAEA,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAIJ,QAAQ,KAAK,QAAjB,EAA0B;AACtBI,IAAAA,cAAc,GAAG,GAAjB;AACH;;AACD,MAAIJ,QAAQ,KAAK,YAAjB,EAA8B;AAC1BI,IAAAA,cAAc,GAAG,GAAjB;AACH;;AAEDH,EAAAA,QAAQ,CAACI,OAAT,CAAiB,CACb;AAACC,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,eAAe,EAAE,OAA9B;AAAuCC,IAAAA,MAAM,EAAE;AAA/C,GADa,EAEb;AAACF,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,eAAe,EAAE,OAA9B;AAAuCC,IAAAA,MAAM,EAAE;AAA/C,GAFa,EAGb;AAACF,IAAAA,OAAO,EAAE,CAAV;AAAaE,IAAAA,MAAM,EAAE;AAArB,GAHa,CAAjB,EAIG;AACCC,IAAAA,QAAQ,EAAEL,cADX;AAECM,IAAAA,UAAU,EAAE;AAFb,GAJH;AAQH,CArBM","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateScreen = createAction('screen/UPDATE_SCREEN');\nconst initialSreenState = 'Main';\n\n\nexport default handleActions({\n    [updateScreen]: (state, action) => {\n        return(state=action.payload)\n    },\n}, initialSreenState);\n\nconst selectScreen = createSelector(\n    state => state.screen,\n    screen => screen   \n)\n\nexport const useScreen = () => useSelector(selectScreen);\n\n\nexport const transition_animation = (toScreen) => {\n\n    let overlayT = document.getElementById(\"overlayT\");\n\n    let transitionTime = 1000;\n\n    if (toScreen === 'Combat'){\n        transitionTime = 600;\n    }\n    if (toScreen === 'Resolution'){\n        transitionTime = 300;\n    }\n\n    overlayT.animate([\n        {opacity: 1, backgroundColor: 'white', zIndex: 100},\n        {opacity: 1, backgroundColor: 'black', zIndex: 100},\n        {opacity: 0, zIndex: 100 }\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n"]},"metadata":{},"sourceType":"module"}