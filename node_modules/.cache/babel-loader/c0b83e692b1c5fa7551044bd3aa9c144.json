{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\n\nconst MainScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); // const [items, setItems] = useState({});\n  // const weatherKey = \"d759058e687e86fb9d57337061f496e5\";\n  // const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={d759058e687e86fb9d57337061f496e5}\"\n\n  const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid={d759058e687e86fb9d57337061f496e5}\"; // const displayScreen = () => {\n  //     dispatch(updateScreen(\"WeatherToday\"))\n  // }\n\n  alert(\"hello\"); // useEffect(() => {\n  //     fetch(apiCall)\n  //     .then(res => res.json())\n  //     .then(\n  //         (result) => {\n  //             setIsLoaded(true);\n  //             setItems(result);\n  //         },\n  //         // Note: it's important to handle errors here\n  //         // instead of a catch() block so that we don't swallow\n  //         // exceptions from actual bugs in components.\n  //         (error) => {\n  //         setIsLoaded(true);\n  //         setError(error);\n  //         }\n  //     )\n  // }, [])\n  // if (error) {\n  //     return <div>Error: {error.message}</div>;\n  // } else if (!isLoaded) {\n  //     return <div>Loading...</div>;\n  // } else {\n  //     return (\n  //         <div>\n  //             {items}\n  //         </div>\n  //     );\n  // }\n  // return (\n  //     <div>\n  //         <div>Welcome to weather anime</div>\n  //         <button onClick={() => displayScreen()}>Weather Today</button>\n  //     </div>\n  // );\n};\n\n_s(MainScreen, \"FZmIrH2jMQHWaFxGxaT+ra8Xse0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"sources":["/Users/uwu/Documents/Dev/weather-app/src/components/screens/main/main.jsx"],"names":["updateScreen","useDispatch","useState","useEffect","MainScreen","dispatch","error","setError","isLoaded","setIsLoaded","apiCall","alert"],"mappings":";;AAAA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CAJqB,CAKrB;AAEA;AACA;;AACA,QAAMQ,OAAO,GAAG,yGAAhB,CATqB,CAUrB;AACA;AACA;;AAEAC,EAAAA,KAAK,CAAC,OAAD,CAAL,CAdqB,CAgBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,CApDD;;GAAMP,U;UACeH,W;;;KADfG,U;AAsDN,eAAeA,UAAf","sourcesContent":["// import mainStyle from \"./main.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\n\n\nconst MainScreen = () => {\n    const dispatch = useDispatch()\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    // const [items, setItems] = useState({});\n\n    // const weatherKey = \"d759058e687e86fb9d57337061f496e5\";\n    // const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={d759058e687e86fb9d57337061f496e5}\"\n    const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid={d759058e687e86fb9d57337061f496e5}\"\n    // const displayScreen = () => {\n    //     dispatch(updateScreen(\"WeatherToday\"))\n    // }\n\n    alert(\"hello\");\n\n    // useEffect(() => {\n    //     fetch(apiCall)\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             setIsLoaded(true);\n    //             setItems(result);\n    //         },\n    //         // Note: it's important to handle errors here\n    //         // instead of a catch() block so that we don't swallow\n    //         // exceptions from actual bugs in components.\n    //         (error) => {\n    //         setIsLoaded(true);\n    //         setError(error);\n    //         }\n    //     )\n    // }, [])\n\n    // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //     return <div>Loading...</div>;\n    // } else {\n    //     return (\n    //         <div>\n    //             {items}\n    //         </div>\n    //     );\n    // }\n\n    // return (\n    //     <div>\n    //         <div>Welcome to weather anime</div>\n    //         <button onClick={() => displayScreen()}>Weather Today</button>\n    //     </div>\n    // );\n}\n\nexport default MainScreen"]},"metadata":{},"sourceType":"module"}